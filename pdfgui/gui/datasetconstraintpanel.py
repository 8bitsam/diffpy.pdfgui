#!/usr/bin/env python
########################################################################
#
# PDFgui            by DANSE Diffraction group
#                   Simon J. L. Billinge
#                   (c) 2006 trustees of the Michigan State University.
#                   All rights reserved.
#
# File coded by:    Chris Farrow
#
# See AUTHORS.txt for a list of people who contributed.
# See LICENSE.txt for license information.
#
########################################################################

# -*- coding: UTF-8 -*-
# generated by wxGlade 0.4 on Wed Feb 22 21:16:04 2006

import wx
from pdfpanel import PDFPanel
from diffpy.pdfgui.control.constraint import Constraint
from diffpy.pdfgui.control.controlerrors import ControlSyntaxError

class DataSetConstraintPanel(wx.Panel, PDFPanel):
    def __init__(self, *args, **kwds):
        PDFPanel.__init__(self)
        # begin wxGlade: DataSetConstraintPanel.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.sizer_panelname_staticbox = wx.StaticBox(self, -1, "")
        self.panelNameLabel = wx.StaticText(self, -1, "Data Set Constraints")
        self.labelScaleFactor = wx.StaticText(self, -1, "Scale Factor")
        self.textCtrlScaleFactor = wx.TextCtrl(self, -1, "")
        self.labelQsigma = wx.StaticText(self, -1, "Qsigma")
        self.textCtrlQsigma = wx.TextCtrl(self, -1, "")
        self.labelQalpha = wx.StaticText(self, -1, "Qalpha")
        self.textCtrlQalpha = wx.TextCtrl(self, -1, "")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        self.__customProperties()

    def __set_properties(self):
        # begin wxGlade: DataSetConstraintPanel.__set_properties
        self.panelNameLabel.SetFont(wx.Font(18, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: DataSetConstraintPanel.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(3, 2, 5, 10)
        sizer_panelname = wx.StaticBoxSizer(self.sizer_panelname_staticbox, wx.HORIZONTAL)
        sizer_panelname.Add(self.panelNameLabel, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        sizer_1.Add(sizer_panelname, 0, wx.ALL|wx.EXPAND, 5)
        grid_sizer_1.Add(self.labelScaleFactor, 0, wx.LEFT|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        grid_sizer_1.Add(self.textCtrlScaleFactor, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.labelQsigma, 0, wx.LEFT|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        grid_sizer_1.Add(self.textCtrlQsigma, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.labelQalpha, 0, wx.LEFT|wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 5)
        grid_sizer_1.Add(self.textCtrlQalpha, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        sizer_1.Add(grid_sizer_1, 0, wx.ALL|wx.EXPAND, 5)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        # end wxGlade

    # USER CONFIGURATION CODE #################################################

    def __customProperties(self):
        self.constraints = {}
        self.textCtrlScaleFactor.Bind(wx.EVT_KILL_FOCUS, self.onDscale)
        self.textCtrlQsigma.Bind(wx.EVT_KILL_FOCUS, self.onQsigma)
        self.textCtrlQalpha.Bind(wx.EVT_KILL_FOCUS, self.onQalpha)

    def setConstraintsData(self):
        """Set the values in the constraints panel.

        The values come from the constraints member dictionary.
        dscale
        qsig
        qalp
        """
        if 'dscale' in self.constraints:
            dscale = self.constraints['dscale'].formula
            self.textCtrlScaleFactor.SetValue(dscale)
        else:
            self.textCtrlScaleFactor.SetValue('')

        if 'qsig' in self.constraints:
            qsig = self.constraints['qsig'].formula
            self.textCtrlQsigma.SetValue(qsig)
        else:
            self.textCtrlQsigma.SetValue('')

        if 'qalp' in self.constraints:
            qalp = self.constraints['qalp'].formula
            self.textCtrlQalpha.SetValue(qalp)
        else:
            self.textCtrlQalpha.SetValue('')

        return

    def processFormula(self, value, parname):
        """Process a formula that was entered into a textCtrl."""
        self.mainFrame.needsSave()
        value = value.strip()
        if value != '':
            # Let the PDFGui error handler take care of this
            self.constraints[parname] = Constraint(value)
        else:
            self.constraints.pop(parname, None)

        return

    # EVENT CODE #############################################################

    def onDscale(self, event): # wxGlade: DataSetConstraintPanel.<event_handler>
        value = self.textCtrlScaleFactor.GetValue()
        self.processFormula(value, 'dscale')
        self.refresh()
        return

    def onQsigma(self, event): # wxGlade: DataSetConstraintPanel.<event_handler>
        value = self.textCtrlQsigma.GetValue()
        self.processFormula(value, 'qsig')
        self.refresh()
        return

    def onQalpha(self, event): # wxGlade: DataSetConstraintPanel.<event_handler>
        value = self.textCtrlQalpha.GetValue()
        self.processFormula(value, 'qalp')
        self.refresh()
        return

    # Methods overloaded from PDFPanel
    def refresh(self):
        """Refresh the panel."""
        # Set the constraints data
        self.setConstraintsData()

        return
# end of class DataSetConstraintPanel


__id__ = "$Id$"
