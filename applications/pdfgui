#!/usr/bin/env python
########################################################################
#
# PDFgui            by DANSE Diffraction group
#                   Simon J. L. Billinge
#                   (c) 2006 trustees of the Michigan State University.
#                   All rights reserved.
#
# File coded by:    Pavol Juhas
#
# See AUTHORS.txt for a list of people who contributed.
# See LICENSE.txt for license information.
#
########################################################################


"""PDFGui   Graphical User Interface for Pair Distribution Function fitting
Usage: pdfgui [project.dpp]

PDFGui is graphical user interface to PDFFit2 - a Python library for PDF
simulation and structure refinement.  PDFGui has many nice features such
as control of multiple fits, integrated plotting, easy setup of sequential
refinements, and saving of entire project in a single file.

Options:
  -h, --help      display this message
  -V, --version   show script version

Debugging options:
  --db-noed       disable exceptions catching to ErrorReportDialog
  --db-nocf       exit without asking to save modified project
"""

import sys
import os, os.path
import re
import signal

# temporary exception catch until directory structure settles
try:
    import diffpy
except ImportError:
    pass

def usage():
    """Show usage info.
    """
    import os.path
    myname = os.path.basename(sys.argv[0])
    msg = __doc__.replace("pdfgui", myname)
    print msg
    return

def version():
    from pdfgui import __version__
    print "PDFGui", __version__

def main():
    import getopt
    import pdfgui.gui.pdfguiglobals as pdfguiglobals
    dbopts = pdfguiglobals.dbopts
    dboptions = [ 'db-' + o[0]  for o in dbopts.alldebugoptions ]
    # default parameters
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hV",
                                    ["help", "version"] + dboptions)
    except getopt.GetoptError, errmsg:
        print >> sys.stderr, errmsg
        sys.exit(2)
    # process options
    for o, a in opts:
        if o in ("-h", "--help"):
            usage()
            sys.exit()
        elif o in ("-V", "--version"):
            version()
            sys.exit()
        elif o[:2] == "--" and o[2:] in dboptions:
            # strip "--db-"
            dbo = o[5:]
            setattr(dbopts, dbo, True)
    # check arguments
    if len(args) == 1 and not os.path.exists(args[0]):
        message = "File %s does not exist." % args[0]
        print >> sys.stderr, message
        sys.exit(2)
    elif len(args) > 1:
        print >> sys.stderr, "Too many project files."
        sys.exit(2)
    # ready to go
    pdfguiglobals.cmdopts = opts
    pdfguiglobals.cmdargs = args
    import pdfgui
    pdfgui.main()

if __name__ == "__main__":
    main()

# version
__id__ = "$Id$"

# End of file
